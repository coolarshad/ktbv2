# Generated by Django 5.0.7 on 2024-09-18 14:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Additive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField(verbose_name='date')),
                ('per_each', models.FloatField()),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Additive',
                'verbose_name_plural': 'Additives',
            },
        ),
        migrations.CreateModel(
            name='Consumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='date')),
                ('name', models.CharField(max_length=50)),
                ('grade', models.CharField(max_length=50)),
                ('sae', models.CharField(max_length=50)),
                ('net_blending_qty', models.FloatField()),
                ('gross_vol_crosscheck', models.FloatField()),
                ('cross_check', models.FloatField()),
                ('total_value', models.FloatField(blank=True, null=True)),
                ('per_litre_cost', models.FloatField()),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Consumption',
                'verbose_name_plural': 'Consumptions',
            },
        ),
        migrations.CreateModel(
            name='FinalProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('packing_size', models.CharField(blank=True, max_length=50, null=True)),
                ('bottles_per_pack', models.FloatField(blank=True, null=True)),
                ('liters_per_pack', models.FloatField(blank=True, null=True)),
                ('total_qty', models.FloatField(blank=True, null=True)),
                ('total_qty_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('qty_in_liters', models.FloatField(blank=True, null=True)),
                ('per_liter_cost', models.FloatField(blank=True, null=True)),
                ('cost_per_case', models.FloatField(blank=True, null=True)),
                ('dk_cost', models.FloatField(blank=True, null=True)),
                ('price_per_bottle', models.CharField(max_length=50, verbose_name='price_per_bottle')),
                ('price_per_label', models.CharField(max_length=50, verbose_name='price_per_label')),
                ('price_per_bottle_cap', models.CharField(max_length=50, verbose_name='price_per_bottle_cap')),
                ('bottle_per_case', models.FloatField(verbose_name='bottle_per_case')),
                ('label_per_case', models.FloatField(verbose_name='label_per_case')),
                ('bottle_cap_per_case', models.FloatField(verbose_name='bottle_cap_per_case')),
                ('price_per_carton', models.CharField(max_length=50, verbose_name='price_per_carton')),
                ('dk_exprice', models.FloatField(blank=True, null=True)),
                ('ks_cost', models.FloatField(blank=True, null=True)),
                ('total_factory_price', models.FloatField(blank=True, null=True)),
                ('freight_logistic', models.FloatField(blank=True, null=True)),
                ('total_cif_price', models.FloatField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('approved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'FinalProduct',
                'verbose_name_plural': 'FinalProducts',
            },
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('name', models.CharField(max_length=50)),
                ('per_each', models.FloatField()),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Packing',
                'verbose_name_plural': 'Packings',
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('cost_per_liter', models.FloatField()),
                ('buy_price_pmt', models.FloatField()),
                ('add_cost', models.FloatField()),
                ('total', models.FloatField()),
                ('ml_to_kl', models.FloatField()),
                ('density', models.FloatField()),
                ('remarks', models.CharField(blank=True, max_length=255, null=True)),
                ('approved', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'RawMaterial',
                'verbose_name_plural': 'RawMaterials',
            },
        ),
        migrations.CreateModel(
            name='ConsumptionAdditive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('qty_in_percent', models.FloatField()),
                ('qty_in_litre', models.FloatField()),
                ('value', models.FloatField()),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costmgt.consumption')),
            ],
            options={
                'verbose_name': 'ConsumptionAdditive',
                'verbose_name_plural': 'ConsumptionAdditives',
            },
        ),
        migrations.CreateModel(
            name='ConsumptionBaseOil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('qty_in_percent', models.FloatField()),
                ('qty_in_litre', models.FloatField()),
                ('value', models.FloatField()),
                ('consumption', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='costmgt.consumption')),
            ],
            options={
                'verbose_name': 'ConsumptionBaseOil',
                'verbose_name_plural': 'ConsumptionBaseOils',
            },
        ),
    ]
