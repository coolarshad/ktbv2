# Generated by Django 5.0.7 on 2024-09-18 14:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=50)),
                ('swift_code', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('initial', models.CharField(max_length=10)),
                ('counter', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencys',
            },
        ),
        migrations.CreateModel(
            name='DocumentsRequired',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'DocumentsRequired',
                'verbose_name_plural': 'DocumentsRequireds',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50, verbose_name='product_name')),
                ('batch_number', models.CharField(max_length=50, verbose_name='batch_number')),
                ('production_date', models.DateField(verbose_name='production_date')),
                ('quantity', models.FloatField(verbose_name='quantity')),
                ('unit', models.CharField(max_length=50, verbose_name='unit')),
            ],
            options={
                'verbose_name': 'Inventory',
                'verbose_name_plural': 'Inventorys',
            },
        ),
        migrations.CreateModel(
            name='Kyc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('companyRegNo', models.CharField(max_length=255)),
                ('regAddress', models.CharField(max_length=255)),
                ('mailingAddress', models.CharField(max_length=255)),
                ('telephone', models.CharField(max_length=255)),
                ('fax', models.CharField(max_length=255)),
                ('person1', models.CharField(max_length=255)),
                ('designation1', models.CharField(max_length=255)),
                ('mobile1', models.CharField(max_length=255)),
                ('email1', models.CharField(max_length=255)),
                ('person2', models.CharField(max_length=255)),
                ('designation2', models.CharField(max_length=255)),
                ('mobile2', models.CharField(max_length=255)),
                ('email2', models.CharField(max_length=255)),
                ('banker', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('swiftCode', models.CharField(blank=True, max_length=255, null=True)),
                ('accountNumber', models.CharField(blank=True, max_length=255, null=True)),
                ('approve1', models.BooleanField(default=False)),
                ('approve2', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Kyc',
                'verbose_name_plural': 'Kycs',
            },
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Packing',
                'verbose_name_plural': 'Packings',
            },
        ),
        migrations.CreateModel(
            name='PaymentFinance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance_payment', models.FloatField(null=True, verbose_name='balance_payment')),
                ('balance_payment_received', models.FloatField(null=True, verbose_name='balance_payment_received')),
                ('balance_payment_made', models.FloatField(null=True, verbose_name='balance_payment_made')),
                ('balance_payment_date', models.DateField(verbose_name='balance_payment_date')),
                ('net_due_in_this_trade', models.FloatField(null=True, verbose_name='net_due_in_this_trade')),
                ('payment_mode', models.CharField(max_length=50, verbose_name='payment_mode')),
                ('status_of_payment', models.CharField(max_length=50, verbose_name='status_of_payment')),
                ('logistic_cost', models.FloatField(null=True, verbose_name='logistic_cost')),
                ('commission_value', models.FloatField(null=True, verbose_name='commission_value')),
                ('bl_fee', models.FloatField(null=True, verbose_name='bl_fee')),
                ('bl_collection_cost', models.FloatField(null=True, verbose_name='bl_collection_cost')),
                ('shipment_status', models.CharField(max_length=50, verbose_name='shipment_status')),
                ('release_docs', models.CharField(max_length=100, verbose_name='release_docs')),
                ('release_docs_date', models.CharField(max_length=50, verbose_name='release_docs_date')),
                ('remarks', models.CharField(max_length=100, verbose_name='remarks')),
            ],
            options={
                'verbose_name': 'PaymentFinance',
                'verbose_name_plural': 'PaymentFinances',
            },
        ),
        migrations.CreateModel(
            name='PaymentTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('advance_in_percentage', models.FloatField(verbose_name='advance_in_percentage')),
                ('advance_within', models.CharField(max_length=100, verbose_name='advance_within')),
                ('advance_from', models.CharField(max_length=100, verbose_name='advance_from')),
                ('payment_within', models.CharField(max_length=100, verbose_name='payment_within')),
                ('payment_from', models.CharField(max_length=100, verbose_name='payment_from')),
            ],
            options={
                'verbose_name': 'PaymentTerm',
                'verbose_name_plural': 'PaymentTerms',
            },
        ),
        migrations.CreateModel(
            name='PrePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adv_due_date', models.DateField(null=True, verbose_name='adv_due_date')),
                ('as_per_pi_advance', models.CharField(max_length=50, verbose_name='as_per_pi_advance')),
                ('lc_number', models.CharField(max_length=50, verbose_name='lc_number')),
                ('lc_opening_bank', models.CharField(max_length=100, verbose_name='lc_opening_bank')),
                ('advance_received', models.FloatField(verbose_name='advance_received')),
                ('date_of_receipt', models.CharField(max_length=50, verbose_name='date_of_receipt')),
                ('advance_paid', models.FloatField(verbose_name='advance_paid')),
                ('date_of_payment', models.CharField(max_length=50, verbose_name='date_of_payment')),
                ('lc_expiry_date', models.CharField(max_length=50, verbose_name='lc_expiry_date')),
                ('latest_shipment_date_in_lc', models.CharField(max_length=50, verbose_name='lc_expiry_date')),
                ('remarks', models.CharField(max_length=100, verbose_name='lc_expiry_date')),
            ],
            options={
                'verbose_name': 'PrePayment',
                'verbose_name_plural': 'PrePayments',
            },
        ),
        migrations.CreateModel(
            name='PreSalePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='date')),
                ('doc_issuance_date', models.DateField(verbose_name='doc_issuance_date')),
                ('payment_term', models.CharField(max_length=100, verbose_name='payment_term')),
                ('advance_due_date', models.DateField(verbose_name='advance_due_date')),
                ('lc_due_date', models.DateField(verbose_name='lc_due_date')),
                ('remarks', models.CharField(max_length=100, verbose_name='payment_term')),
            ],
            options={
                'verbose_name': 'PreSalePurchase',
                'verbose_name_plural': 'PreSalePurchases',
            },
        ),
        migrations.CreateModel(
            name='ProductName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ProductName',
                'verbose_name_plural': 'ProductNames',
            },
        ),
        migrations.CreateModel(
            name='PurchaseProductTrace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=100)),
                ('total_contract_qty', models.FloatField(null=True)),
                ('trade_qty', models.FloatField(null=True)),
                ('contract_balance_qty', models.FloatField(null=True)),
                ('first_trn', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'verbose_name': 'PurchaseProductTrace',
                'verbose_name_plural': 'PurchaseProductTraces',
            },
        ),
        migrations.CreateModel(
            name='SalesProductTrace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=100)),
                ('total_contract_qty', models.FloatField(null=True)),
                ('trade_qty', models.FloatField(null=True)),
                ('contract_balance_qty', models.FloatField(null=True)),
                ('first_trn', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'verbose_name': 'SalesProductTrace',
                'verbose_name_plural': 'SalesProductTraces',
            },
        ),
        migrations.CreateModel(
            name='SalesPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_date', models.DateField(verbose_name='invoice_date')),
                ('invoice_number', models.CharField(max_length=50, verbose_name='invoice_number')),
                ('invoice_amount', models.FloatField(verbose_name='invoice_amount')),
                ('commission_value', models.FloatField(verbose_name='commission_value')),
                ('bl_number', models.CharField(max_length=50, verbose_name='bl_number')),
                ('bl_qty', models.FloatField(verbose_name='bl_qty')),
                ('bl_fees', models.FloatField(verbose_name='bl_fees')),
                ('bl_collection_cost', models.FloatField(verbose_name='bl_collection_cost')),
                ('bl_date', models.DateField(verbose_name='bl_date')),
                ('total_packing_cost', models.FloatField(verbose_name='total_packing_cost')),
                ('packaging_supplier', models.CharField(max_length=50, verbose_name='packaging_supplier')),
                ('logistic_supplier', models.CharField(max_length=50, verbose_name='logistic_supplier')),
                ('logistic_cost', models.FloatField(verbose_name='logistic_cost')),
                ('logistic_cost_due_date', models.CharField(max_length=50, verbose_name='logistic_cost_due_date')),
                ('liner', models.CharField(max_length=50, verbose_name='liner')),
                ('pod', models.CharField(max_length=50, verbose_name='pod')),
                ('pol', models.CharField(max_length=50, verbose_name='pol')),
                ('etd', models.DateField(verbose_name='etd')),
                ('eta', models.DateField(verbose_name='eta')),
                ('shipment_status', models.CharField(max_length=50, verbose_name='shipment_status')),
                ('remarks', models.CharField(max_length=50, verbose_name='remarks')),
            ],
            options={
                'verbose_name': 'SalesPurchase',
                'verbose_name_plural': 'SalesPurchases',
            },
        ),
        migrations.CreateModel(
            name='ShipmentSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'ShipmentSize',
                'verbose_name_plural': 'ShipmentSizes',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
            },
        ),
        migrations.CreateModel(
            name='PFCharges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('charge', models.FloatField(default=0, null=True, verbose_name='charge')),
                ('payment_finance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.paymentfinance', verbose_name='payment_finance')),
            ],
            options={
                'verbose_name': 'PFCharges',
                'verbose_name_plural': 'PFChargess',
            },
        ),
        migrations.CreateModel(
            name='LcCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('lc_copy', models.FileField(upload_to='uploads/lc_copy', verbose_name='lc_copy')),
                ('prepayment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.prepayment', verbose_name='prepayment')),
            ],
            options={
                'verbose_name': 'LcCopy',
                'verbose_name_plural': 'LcCopys',
            },
        ),
        migrations.CreateModel(
            name='LcAmmendment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('lc_ammendment', models.FileField(upload_to='uploads/lc_amend', verbose_name='lc_ammendment')),
                ('prepayment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.prepayment', verbose_name='prepayment')),
            ],
            options={
                'verbose_name': 'LcAmmendment',
                'verbose_name_plural': 'LcAmmendments',
            },
        ),
        migrations.CreateModel(
            name='AdvanceTTCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('advance_tt_copy', models.FileField(upload_to='uploads/advance_tt_copy', verbose_name='advance_tt_copy')),
                ('prepayment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.prepayment', verbose_name='prepayment')),
            ],
            options={
                'verbose_name': 'AdvanceTTCopy',
                'verbose_name_plural': 'AdvanceTTCopys',
            },
        ),
        migrations.CreateModel(
            name='AcknowledgedPO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ackn_po', models.FileField(upload_to='uploads/ackn_po', verbose_name='ackn_po')),
                ('ackn_po_name', models.CharField(max_length=50, verbose_name='ackn_po_name')),
                ('presalepurchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.presalepurchase', verbose_name='presalepurchase')),
            ],
            options={
                'verbose_name': 'AcknowledgedPO',
                'verbose_name_plural': 'AcknowledgedPOs',
            },
        ),
        migrations.CreateModel(
            name='AcknowledgedPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ackn_pi', models.FileField(upload_to='uploads/ackn_pi', verbose_name='ackn_pi')),
                ('ackn_pi_name', models.CharField(max_length=50, verbose_name='ackn_pi_name')),
                ('presalepurchase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.presalepurchase', verbose_name='presalepurchase')),
            ],
            options={
                'verbose_name': 'AcknowledgedPI',
                'verbose_name_plural': 'AcknowledgedPIs',
            },
        ),
        migrations.CreateModel(
            name='PackingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('packing_list', models.FileField(upload_to='uploads/sp_packing_list', verbose_name='packing_list')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.salespurchase', verbose_name='sp')),
            ],
            options={
                'verbose_name': 'PackingList',
                'verbose_name_plural': 'PackingLists',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('invoice', models.FileField(upload_to='uploads/sp_invoice', verbose_name='invoice')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.salespurchase', verbose_name='sp')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='COA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('coa', models.FileField(upload_to='uploads/sp_coa', verbose_name='coa')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.salespurchase', verbose_name='sp')),
            ],
            options={
                'verbose_name': 'COA',
                'verbose_name_plural': 'COAs',
            },
        ),
        migrations.CreateModel(
            name='BL_Copy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('bl_copy', models.FileField(upload_to='uploads/sp_bl_copy', verbose_name='bl_copy')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.salespurchase', verbose_name='sp')),
            ],
            options={
                'verbose_name': 'BL_Copy',
                'verbose_name_plural': 'BL_Copys',
            },
        ),
        migrations.CreateModel(
            name='SalesPurchaseExtraCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('charge', models.FloatField(blank=True, null=True, verbose_name='charge')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.salespurchase', verbose_name='sp')),
            ],
            options={
                'verbose_name': 'SalesPurchaseExtraCharge',
                'verbose_name_plural': 'SalesPurchaseExtraCharges',
            },
        ),
        migrations.CreateModel(
            name='SalesPurchaseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=50, verbose_name='product_name')),
                ('hs_code', models.CharField(max_length=50, verbose_name='hs_code')),
                ('tolerance', models.FloatField(verbose_name='tolerance')),
                ('batch_number', models.CharField(max_length=50, verbose_name='batch_number')),
                ('production_date', models.DateField(verbose_name='production_date')),
                ('trade_qty', models.FloatField(verbose_name='trade_qty')),
                ('trade_qty_unit', models.CharField(max_length=15, verbose_name='trade_qty_unit')),
                ('sp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sp_product', to='trademgt.salespurchase')),
            ],
            options={
                'verbose_name': 'SalesPurchaseProduct',
                'verbose_name_plural': 'SalesPurchaseProducts',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=100, verbose_name='company')),
                ('trd', models.DateField(verbose_name='trd')),
                ('trn', models.CharField(max_length=50, verbose_name='trn')),
                ('trade_type', models.CharField(max_length=50, verbose_name='trade_type')),
                ('trade_category', models.CharField(max_length=50, verbose_name='trade_category')),
                ('country_of_origin', models.CharField(max_length=50, verbose_name='country_of_origin')),
                ('customer_company_name', models.CharField(max_length=50, verbose_name='customer_company_name')),
                ('address', models.CharField(max_length=100, verbose_name='address')),
                ('currency_selection', models.CharField(max_length=15, verbose_name='currency_selection')),
                ('exchange_rate', models.FloatField(verbose_name='exchange_rate')),
                ('commission_agent', models.CharField(max_length=50, verbose_name='commission_agent')),
                ('contract_value', models.FloatField(verbose_name='contract_value')),
                ('payment_term', models.CharField(max_length=100, verbose_name='payment_term')),
                ('advance_value_to_receive', models.FloatField(verbose_name='advance_value_to_receive')),
                ('commission_value', models.FloatField(verbose_name='commission_value')),
                ('logistic_provider', models.CharField(max_length=100, verbose_name='logistic_provider')),
                ('estimated_logistic_cost', models.FloatField(verbose_name='estimated_logistic_cost')),
                ('logistic_cost_tolerence', models.FloatField(verbose_name='logistic_cost_tolerence')),
                ('logistic_cost_remarks', models.CharField(max_length=100, verbose_name='logistic_cost_remarks')),
                ('bank_name_address', models.CharField(max_length=100, verbose_name='bank_name_address')),
                ('account_number', models.CharField(max_length=50, verbose_name='account_number')),
                ('swift_code', models.CharField(max_length=50, verbose_name='swift_code')),
                ('incoterm', models.CharField(max_length=50, verbose_name='incoterm')),
                ('pod', models.CharField(max_length=50, verbose_name='pod')),
                ('pol', models.CharField(max_length=50, verbose_name='pol')),
                ('eta', models.CharField(max_length=50, verbose_name='eta')),
                ('etd', models.CharField(max_length=50, verbose_name='etd')),
                ('remarks', models.CharField(max_length=150, verbose_name='remarks')),
                ('trader_name', models.CharField(max_length=150, verbose_name='trader_name')),
                ('insurance_policy_number', models.CharField(max_length=50, verbose_name='insurance_policy_number')),
                ('shipper_in_bl', models.CharField(max_length=50, verbose_name='shipper_in_bl')),
                ('consignee_in_bl', models.CharField(max_length=50, verbose_name='consignee_in_bl')),
                ('notify_party_in_bl', models.CharField(max_length=50, verbose_name='notify_party_in_bl')),
                ('container_shipment_size', models.CharField(max_length=50, verbose_name='container_shipment_size')),
                ('bl_fee', models.FloatField(verbose_name='bl_fee')),
                ('bl_fee_remarks', models.CharField(max_length=150, verbose_name='bl_fee_remarks')),
                ('approved', models.BooleanField(default=False, verbose_name='approved')),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True, verbose_name='approved_by')),
                ('related_trades', models.ManyToManyField(blank=True, related_name='related_trades', to='trademgt.trade')),
            ],
            options={
                'verbose_name': 'Trade',
                'verbose_name_plural': 'Trades',
            },
        ),
        migrations.AddField(
            model_name='salespurchase',
            name='trn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.trade', verbose_name='trn'),
        ),
        migrations.CreateModel(
            name='SalesPending',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trd', models.DateField(verbose_name='trd')),
                ('company', models.CharField(max_length=50, verbose_name='company')),
                ('payment_term', models.CharField(max_length=50, verbose_name='company')),
                ('product_code', models.CharField(max_length=50, verbose_name='product_code')),
                ('product_name', models.CharField(max_length=50, verbose_name='product_code')),
                ('hs_code', models.CharField(max_length=50, verbose_name='product_code')),
                ('total_contract_qty', models.FloatField(verbose_name='total_contract_qty')),
                ('total_contract_qty_unit', models.CharField(max_length=15, verbose_name='total_contract_qty_unit')),
                ('contract_balance_qty', models.FloatField(verbose_name='contract_balance_qty')),
                ('contract_balance_qty_unit', models.CharField(max_length=15, verbose_name='contract_balance_qty_unit')),
                ('trade_qty', models.FloatField(verbose_name='total_contract_qty')),
                ('trade_qty_unit', models.CharField(max_length=15, verbose_name='total_contract_qty_unit')),
                ('trn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_pending_product', to='trademgt.trade')),
            ],
            options={
                'verbose_name': 'SalesPending',
                'verbose_name_plural': 'SalesPendings',
            },
        ),
        migrations.CreateModel(
            name='PurchasePending',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trd', models.DateField(verbose_name='trd')),
                ('company', models.CharField(max_length=50, verbose_name='company')),
                ('payment_term', models.CharField(max_length=50, verbose_name='company')),
                ('product_code', models.CharField(max_length=50, verbose_name='product_code')),
                ('product_name', models.CharField(max_length=50, verbose_name='product_code')),
                ('hs_code', models.CharField(max_length=50, verbose_name='product_code')),
                ('total_contract_qty', models.FloatField(verbose_name='total_contract_qty')),
                ('total_contract_qty_unit', models.CharField(max_length=15, verbose_name='total_contract_qty_unit')),
                ('contract_balance_qty', models.FloatField(verbose_name='contract_balance_qty')),
                ('contract_balance_qty_unit', models.CharField(max_length=15, verbose_name='contract_balance_qty_unit')),
                ('trade_qty', models.FloatField(verbose_name='total_contract_qty')),
                ('trade_qty_unit', models.CharField(max_length=15, verbose_name='total_contract_qty_unit')),
                ('trn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_pending_product', to='trademgt.trade')),
            ],
            options={
                'verbose_name': 'PurchasePending',
                'verbose_name_plural': 'PurchasePendings',
            },
        ),
        migrations.AddField(
            model_name='presalepurchase',
            name='trn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.trade', verbose_name='trn'),
        ),
        migrations.AddField(
            model_name='prepayment',
            name='trn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.trade', verbose_name='trn'),
        ),
        migrations.AddField(
            model_name='paymentfinance',
            name='trn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.trade', verbose_name='trn'),
        ),
        migrations.CreateModel(
            name='TradeExtraCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_cost', models.FloatField(verbose_name='extra_cost')),
                ('extra_cost_remarks', models.CharField(max_length=100, verbose_name='extra_cost_remarks')),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_extra_costs', to='trademgt.trade')),
            ],
            options={
                'verbose_name': 'TradeExtraCost',
                'verbose_name_plural': 'TradeExtraCosts',
            },
        ),
        migrations.CreateModel(
            name='TradeProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_code', models.CharField(max_length=50, verbose_name='product_code')),
                ('product_name', models.CharField(max_length=50, verbose_name='product_name')),
                ('product_name_for_client', models.CharField(max_length=50, verbose_name='product_name_for_client')),
                ('loi', models.FileField(upload_to='uploads/lois', verbose_name='loi')),
                ('hs_code', models.CharField(max_length=50, verbose_name='hs_code')),
                ('total_contract_qty', models.FloatField(verbose_name='total_contract_qty')),
                ('total_contract_qty_unit', models.CharField(max_length=15, verbose_name='total_contract_qty_unit')),
                ('tolerance', models.FloatField(verbose_name='tolerance')),
                ('contract_balance_qty', models.FloatField(verbose_name='contract_balance_qty')),
                ('contract_balance_qty_unit', models.CharField(max_length=15, verbose_name='contract_balance_qty_unit')),
                ('trade_qty', models.FloatField(verbose_name='trade_qty')),
                ('trade_qty_unit', models.CharField(max_length=15, verbose_name='trade_qty_unit')),
                ('selected_currency_rate', models.FloatField(verbose_name='selected_currency_rate')),
                ('rate_in_usd', models.FloatField(verbose_name='rate_in_usd')),
                ('product_value', models.FloatField(verbose_name='product_value')),
                ('markings_in_packaging', models.CharField(max_length=100, verbose_name='markings_in_packaging')),
                ('packaging_supplier', models.CharField(max_length=100, verbose_name='packaging_supplier')),
                ('mode_of_packing', models.CharField(max_length=25, verbose_name='mode_of_packing')),
                ('rate_of_each_packing', models.FloatField(verbose_name='rate_of_each_packing')),
                ('qty_of_packing', models.FloatField(verbose_name='qty_of_packing')),
                ('total_packing_cost', models.FloatField(verbose_name='total_packing_cost')),
                ('commission_rate', models.FloatField(verbose_name='commission_rate')),
                ('total_commission', models.FloatField(verbose_name='total_commission')),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trade_products', to='trademgt.trade')),
            ],
            options={
                'verbose_name': 'TradeProduct',
                'verbose_name_plural': 'TradeProducts',
            },
        ),
        migrations.CreateModel(
            name='TTCopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('tt_copy', models.FileField(upload_to='uploads/pf_tt_copy', verbose_name='tt_copy')),
                ('payment_finance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trademgt.paymentfinance', verbose_name='payment_finance')),
            ],
            options={
                'verbose_name': 'TTCopy',
                'verbose_name_plural': 'TTCopys',
            },
        ),
    ]
